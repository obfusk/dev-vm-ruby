---

- name:             create directories in ~vagrant
  file:             path=/home/vagrant/{{ item }} state=directory mode=755
  with_items:
    - bin
    - .node/bin
    - .gem/ruby/{{ ruby_version }}/bin

- name:             symlinks for vagrant
  file:             path={{ item.path }} src={{ item.src }} state=link
  with_items:       links.vagrant

- name:             ~vagrant/.bashrc
  copy:             dest=/home/vagrant/.bashrc src=bashrc
                    mode=644 backup=yes

- name:             ~vagrant/.profile
  copy:             dest=/home/vagrant/.profile src=profile
                    mode=644 backup=yes

- name:             ~vagrant/.gemrc
  copy:             dest=/home/vagrant/.gemrc src=gemrc mode=644

- name:             ~vagrant/.npmrc
  copy:             dest=/home/vagrant/.npmrc src=npmrc mode=644


- name:             get byobu backend
  shell:            cat /home/vagrant/.byobu/backend || true
  register:         byobu_backend_vagrant
  changed_when:     false

- name:             byobu w/ screen
  command:          byobu-select-backend screen
  when:             '"screen" not in byobu_backend_vagrant.stdout'

- name:             get byobu keybindings
  shell:            cat /home/vagrant/.byobu/keybindings || true
  register:         byobu_ctrla_vagrant
  changed_when:     false

- name:             byobu w/ ctrl-a
  command:          byobu-ctrl-a screen
  when:             '"register" not in byobu_ctrla_vagrant.stdout'


- name:             get git user.name
  shell:            git config --global user.name || true
  register:         git_user_vagrant
  changed_when:     false

- name:             set git user.name
  command:          git config --global user.name {{ git.user }}
  when:             git_user_vagrant.stdout != git.user

- name:             get git user.email
  shell:            git config --global user.email || true
  register:         git_email_vagrant
  changed_when:     false

- name:             set git user.email
  command:          git config --global user.email {{ git.email }}
  when:             git_email_vagrant.stdout != git.email

- name:             get git color.ui
  shell:            git config --global color.ui || true
  register:         git_color_vagrant
  changed_when:     false

- name:             set git color.ui
  command:          git config --global color.ui auto
  when:             git_color_vagrant.stdout != 'auto'


- name:             gems for vagrant
  gem:              name={{ item }} state=latest
  with_items:       gems

- name:             npms for vagrant
  npm:              name={{ item }} state=latest global=yes
  with_items:       npms
